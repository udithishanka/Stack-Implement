#include <iostream>
#include <chrono>
using namespace std;
using namespace chrono;

const int MAX_SIZE = 10;

class Stack {
private:
  int arr[MAX_SIZE];
  int top;

public:
  Stack() {
    top = -1;
  }

  bool isEmpty() {
    return top == -1;
  }

  bool isFull() {
    return top == MAX_SIZE - 1;
  }

  void push(int val) {
    if (isFull()) {
      cout << "Stack Overflow!" << endl;
      return;
    }
    top++;
    arr[top] = val;
  }

  void pop() {
    if (isEmpty()) {
      cout << "Stack Underflow!" << endl;
      return;
    }
    top--;
  }

  int peek() {
    if (isEmpty()) {
      cout << "Stack Underflow!" << endl;
      return -1;
    }
    return arr[top];
  }

  void display() {
    if (isEmpty()) {
      cout << "Stack is empty!" << endl;
      return;
    }
    cout << "Stack elements are: ";
    for (int i = 0; i <= top; i++) {
      cout << arr[i] << " ";
    }
    cout << endl;
  }
};

int main() {
  Stack stack;
  auto start = high_resolution_clock::now();
  stack.push(8);
  stack.push(10);
  stack.push(5);
  stack.push(11);
  stack.push(15);
  stack.push(23);
  stack.push(6);
  stack.push(18);
  stack.push(20);
  stack.push(17);
  stack.display();
  stack.pop();
  stack.pop();
  stack.pop();
  stack.pop();
  stack.pop();
  stack.display();
  stack.push(4);
  stack.push(30);
  stack.push(3);
  stack.push(1);
  stack.display();
  auto stop = high_resolution_clock::now();
  auto duration = duration_cast<microseconds>(stop - start);
  cout << "Time taken by main function: " << duration.count() << " microseconds" << endl;
  return 0;
}
